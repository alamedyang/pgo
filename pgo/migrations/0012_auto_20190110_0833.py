# Generated by Django 2.1.3 on 2019-01-10 08:33

from decimal import Decimal

from django.db import migrations


def update_type_effectivness_scalars(apps, schema_editor):
    TypeEffectivnessScalar = apps.get_model('pgo', 'TypeEffectivnessScalar')

    for tfs in TypeEffectivnessScalar.objects.all():
        if tfs.slug == 'super-effective':
            tfs.scalar = Decimal('1.6')
        if tfs.slug == 'not-very-effective':
            tfs.scalar = Decimal('0.625')
        if tfs.slug == 'immune':
            tfs.scalar = Decimal('0.390625')
        tfs.save()


def update_type_effectivness(apps, schema_editor):
    Type = apps.get_model('pgo', 'Type')
    TypeEffectivnessScalar = apps.get_model('pgo', 'TypeEffectivnessScalar')

    weak = strong = TypeEffectivnessScalar.objects.get(slug='super-effective')
    feeble = resistant = TypeEffectivnessScalar.objects.get(slug='not-very-effective')
    puny = immune = TypeEffectivnessScalar.objects.get(slug='immune')

    for t in Type.objects.all():
        t.strong = [[x[0], str(strong.scalar)] for x in t.strong]
        t.feeble = [[x[0], str(feeble.scalar)] for x in t.feeble]
        t.puny = [[x[0], str(puny.scalar)] for x in t.puny]
        t.resistant = [[x[0], str(resistant.scalar)] for x in t.resistant]
        t.weak = [[x[0], str(weak.scalar)] for x in t.weak]
        t.immune = [[x[0], str(immune.scalar)] for x in t.immune]
        t.save()


class Migration(migrations.Migration):

    dependencies = [
        ('pgo', '0011_auto_20190110_0821'),
    ]

    operations = [
        migrations.RunPython(
            update_type_effectivness_scalars,
            migrations.RunPython.noop
        ),
        migrations.RunPython(
            update_type_effectivness,
            migrations.RunPython.noop
        )
    ]
